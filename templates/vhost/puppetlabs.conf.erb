<% @_access_logs.each do |log| -%>
<%   env ||= "env=#{log['env']}" if log['env'] -%>
<%   env ||= '' -%>
<%   format ||= "\"#{log['format']}\"" if log['format'] -%>
<%   format ||= 'combined' -%>
<%   if log['file'] -%>
<%     if log['file'].chars.first == '/' -%>
<%       destination = "#{log['file']}" -%>
<%     else -%>
<%       destination = "#{@logroot}/#{log['file']}" -%>
<%     end -%>
<%   elsif log['syslog'] -%>
<%     destination = log['syslog'] -%>
<%   elsif log['pipe'] -%>
<%     destination = log['pipe'] -%>
<%   else -%>
<%     destination ||= "#{@logroot}/#{@name}_access_ssl.log" if @ssl -%>
<%     destination ||= "#{@logroot}/#{@name}_access.log" -%>
<%   end -%>
  CustomLog "<%= destination %>" <%= format %> <%= env %>
<% end -%>
<% if @action -%>

  Action <%= @action %> /cgi-bin virtual
<% end -%>
<% Array(@additional_includes).each do |include| -%>

  ## Load additional static includes
<%- if scope.function_versioncmp([@apache_version, '2.4']) >= 0 && @use_optional_includes -%>
  IncludeOptional "<%= include %>"
<%- else -%>
  Include "<%= include %>"
<%- end -%>
<% end -%>
<% if @aliases and ! @aliases.empty? -%>
  ## Alias declarations for resources outside the DocumentRoot
  <%- [@aliases].flatten.compact.each do |alias_statement| -%>
    <%- if alias_statement["path"] != '' -%>
      <%- if alias_statement["alias"] and alias_statement["alias"] != '' -%>
  Alias <%= alias_statement["alias"] %> "<%= alias_statement["path"] %>"
      <%- elsif alias_statement["aliasmatch"] and alias_statement["aliasmatch"] != '' -%>
  AliasMatch <%= alias_statement["aliasmatch"] %> "<%= alias_statement["path"] %>"
      <%- elsif alias_statement["scriptalias"] and alias_statement["scriptalias"] != '' -%>
  ScriptAlias <%= alias_statement["scriptalias"] %> "<%= alias_statement["path"] %>"
      <%- elsif alias_statement["scriptaliasmatch"] and alias_statement["scriptaliasmatch"] != '' -%>
  ScriptAliasMatch <%= alias_statement["scriptaliasmatch"] %> "<%= alias_statement["path"] %>"
      <%- end -%>
    <%- end -%>
  <%- end -%>
<% end -%>
<%- if @allow_encoded_slashes -%>

  AllowEncodedSlashes <%= @allow_encoded_slashes %>
<%- end -%>
<% if @auth_kerb -%>

  ## Kerberos directives
  <%- if @krb_method_negotiate -%>
  KrbMethodNegotiate <%= @krb_method_negotiate %>
  <%- end -%>
  <%- if @krb_method_k5passwd -%>
  KrbMethodK5Passwd <%= @krb_method_k5passwd %>
  <%- end -%>
  <%- if @krb_authoritative -%>
  KrbAuthoritative <%= @krb_authoritative %>
  <%- end -%>
  <%- if @krb_auth_realms and @krb_auth_realms.length >= 1 -%>
  KrbAuthRealms <%= @krb_auth_realms.join(' ') %>
  <%- end -%>
  <%- if @krb_5keytab -%>
  Krb5Keytab <%= @krb_5keytab %>
  <%- end -%>
  <%- if @krb_local_user_mapping -%>
  KrbLocalUserMapping <%= @krb_local_user_mapping %>
  <%- end -%>
  <%- if @krb_verify_kdc -%>
  KrbVerifyKDC <%= @krb_verify_kdc %>
  <%- end -%>
  <%- if @krb_servicename -%>
  KrbServiceName <%= @krb_servicename %>
  <%- end -%>
  <%- if @krb_save_credentials -%>
  KrbSaveCredentials <%= @krb_save_credentials -%>
  <%- end -%>

<% end -%>
<% if @block and ! @block.empty? -%>

  ## Block access statements
<% if @block.include? 'scm' -%>
  # Block access to SCM directories.
  <DirectoryMatch .*\.(svn|git|bzr)/.*>
  <%- if scope.function_versioncmp([@apache_version, '2.4']) >= 0 -%>
    Require all denied
  <%- else -%>
    Deny From All
  <%- end -%>
  </DirectoryMatch>
<% end -%>
<% end -%>
<% if @add_default_charset -%>

  AddDefaultCharset <%= @add_default_charset %>
<% end -%>
<% if @custom_fragment -%>

  ## Custom fragment
  <%= @custom_fragment %>
<% end -%>
<% if @_directories and ! @_directories.empty? -%>

  <%- scope.setvar('_template_scope', {}) -%>
  ## Directories, there should at least be a declaration for <%= @docroot %>
  <%- [@_directories].flatten.compact.each do |directory| -%>
    <%- if scope.function_versioncmp([@apache_version, '2.4']) >= 0 -%>
      <%- if directory['allow'] and ! [ false, 'false', '' ].include?(directory['allow']) -%>
        <%- scope.function_warning(["Apache::Vhost: Using allow is deprecated in your Apache version"]) -%>
      <%- end -%>
      <%- if directory['deny'] and ! [ false, 'false', '' ].include?(directory['deny']) -%>
        <%- scope.function_warning(["Apache::Vhost: Using deny is deprecated in your Apache version"]) -%>
      <%- end -%>
      <%- if directory['order'] and ! [ false, 'false', '' ].include?(directory['order']) -%>
        <%- scope.function_warning(["Apache::Vhost: Using order is deprecated in your Apache version"]) -%>
      <%- end -%>
      <%- if directory['satisfy'] and ! [ false, 'false', '' ].include?(directory['satisfy']) -%>
        <%- scope.function_warning(["Apache::Vhost: Using satisfy is deprecated in your Apache version"]) -%>
      <%- end -%>
    <%- end -%>
    <%- if directory['path'] and directory['path'] != '' -%>
      <%- if directory['provider'] and directory['provider'].match('(directory|location|files|proxy)') -%>
        <%- if /^(.*)match$/ =~ directory['provider'] -%>
          <%- provider = $1.capitalize + 'Match' -%>
        <%- else -%>
          <%- provider = directory['provider'].capitalize -%>
        <%- end -%>
      <%- else -%>
        <%- provider = 'Directory' -%>
      <%- end -%>
      <%- path = directory['path'] -%>

  <<%= provider %> "<%= path %>">
      <%- if directory['headers'] -%>
        <%- Array(directory['headers']).each do |header| -%>
    Header <%= header %>
      <%- end -%>
    <%- end -%>
    <%- if ! directory['geoip_enable'].nil? -%>
    GeoIPEnable <%= scope.function_bool2httpd([directory['geoip_enable']]) %>
    <%- end -%>
    <%- if directory['options'] -%>
    Options <%= Array(directory['options']).join(' ') %>
    <%- end -%>
    <%- if provider == 'Directory' -%>
      <%- if directory['index_options'] -%>
    IndexOptions <%= Array(directory['index_options']).join(' ') %>
      <%- end -%>
      <%- if directory['index_order_default'] -%>
    IndexOrderDefault <%= Array(directory['index_order_default']).join(' ') %>
      <%- end -%>
      <%- if directory['index_style_sheet'] -%>
    IndexStyleSheet '<%= directory['index_style_sheet'] %>'
      <%- end -%>
      <%- if directory['allow_override'] -%>
    AllowOverride <%= Array(directory['allow_override']).join(' ') %>
      <%- elsif provider == 'Directory' -%>
    AllowOverride None
      <%- end -%>
    <%- end -%>
    <%- scope.lookupvar('_template_scope')[:item] = directory -%>
<%= scope.function_template(["apache/vhost/_require.erb"]) -%>
    <%- if directory['limit'] && directory['limit'] != '' -%>
      <%- Array(directory['limit']).each do |lim| -%>
    <Limit <%= lim['methods'] %>>
    <%- scope.lookupvar('_template_scope')[:item] = lim -%>
    <%= scope.function_template(["apache/vhost/_require.erb"]) -%>
    </Limit>
      <%- end -%>
    <%- end -%>
    <%- if directory['addhandlers'] and ! directory['addhandlers'].empty? -%>
      <%- [directory['addhandlers']].flatten.compact.each do |addhandler| -%>
    <FilesMatch ".+(<%= Array(addhandler['extensions']).collect { |s| Regexp.escape(s) }.join('|') %>)$">
        SetHandler <%= addhandler['handler'] %>
    </FilesMatch>
      <%- end -%>
    <%- end -%>
    <%- if directory['sethandler'] and directory['sethandler'] != '' -%>
    SetHandler <%= directory['sethandler'] %>
    <%- end -%>
    <%- if directory['passenger_enabled'] and directory['passenger_enabled'] != '' -%>
    PassengerEnabled <%= directory['passenger_enabled'] %>
    <%- end -%>
    <%- if directory['php_flags'] and ! directory['php_flags'].empty? -%>
      <%- directory['php_flags'].sort.each do |flag,value| -%>
        <%- value = if value =~ /true|yes|on|1/i then 'on' else 'off' end -%>
    php_flag <%= "#{flag} #{value}" %>
      <%- end -%>
    <%- end -%>
    <%- if directory['php_values'] and ! directory['php_values'].empty? -%>
      <%- directory['php_values'].sort.each do |key,value| -%>
    php_value <%= "#{key} #{value}" %>
      <%- end -%>
    <%- end -%>
    <%- if directory['php_admin_flags'] and ! directory['php_admin_flags'].empty? -%>
      <%- directory['php_admin_flags'].sort.each do |flag,value| -%>
        <%- value = if value =~ /true|yes|on|1/i then 'on' else 'off' end -%>
    php_admin_flag <%= "#{flag} #{value}" %>
      <%- end -%>
    <%- end -%>
    <%- if directory['php_admin_values'] and ! directory['php_admin_values'].empty? -%>
      <%- directory['php_admin_values'].sort.each do |key,value| -%>
    php_admin_value <%= "#{key} #{value}" %>
      <%- end -%>
    <%- end -%>
    <%- if directory['directoryindex'] and directory['directoryindex'] != '' -%>
    DirectoryIndex <%= directory['directoryindex'] %>
    <%- end -%>
    <%- if directory['additional_includes'] and ! directory['additional_includes'].empty? -%>
      <%- directory['additional_includes'].each do |include| -%>
    Include '<%= "#{include}" %>'
      <%- end -%>
    <%- end -%>
    <%- if directory['error_documents'] and ! directory['error_documents'].empty? -%>
      <%- [directory['error_documents']].flatten.compact.each do |error_document| -%>
    ErrorDocument <%= error_document['error_code'] %> <%= error_document['document'] %>
      <%- end -%>
    <%- end -%>
    <%- if directory['auth_type'] -%>
    AuthType <%= directory['auth_type'] %>
    <%- end -%>
    <%- if directory['auth_name'] -%>
    AuthName "<%= directory['auth_name'] %>"
    <%- end -%>
    <%- if directory['auth_digest_algorithm'] -%>
    AuthDigestAlgorithm <%= directory['auth_digest_algorithm'] %>
    <%- end -%>
    <%- if directory['auth_digest_domain'] -%>
    AuthDigestDomain <%= Array(directory['auth_digest_domain']).join(' ') %>
    <%- end -%>
    <%- if directory['auth_digest_nonce_lifetime'] -%>
    AuthDigestNonceLifetime <%= directory['auth_digest_nonce_lifetime'] %>
    <%- end -%>
    <%- if directory['auth_digest_provider'] -%>
    AuthDigestProvider <%= directory['auth_digest_provider'] %>
    <%- end -%>
    <%- if directory['auth_digest_qop'] -%>
    AuthDigestQop <%= directory['auth_digest_qop'] %>
    <%- end -%>
    <%- if directory['auth_digest_shmem_size'] -%>
    AuthDigestShmemSize <%= directory['auth_digest_shmem_size'] %>
    <%- end -%>
    <%- if directory['auth_basic_authoritative'] -%>
    AuthBasicAuthoritative <%= directory['auth_basic_authoritative'] %>
    <%- end -%>
    <%- if directory['auth_basic_fake'] -%>
    AuthBasicFake <%= directory['auth_basic_fake'] %>
    <%- end -%>
    <%- if directory['auth_basic_provider'] -%>
    AuthBasicProvider <%= directory['auth_basic_provider'] %>
    <%- end -%>
    <%- if directory['auth_user_file'] -%>
    AuthUserFile <%= directory['auth_user_file'] %>
    <%- end -%>
    <%- if directory['auth_group_file'] -%>
    AuthGroupFile <%= directory['auth_group_file'] %>
    <%- end -%>
    <%- if directory['auth_merging'] -%>
    AuthMerging <%= directory['auth_merging'] %>
    <%- end -%>
    <%- if directory['fallbackresource'] -%>
    FallbackResource <%= directory['fallbackresource'] %>
    <%- end -%>
    <%- if directory['expires_active'] -%>
    ExpiresActive <%= directory['expires_active'] %>
    <%- end -%>
    <%- if directory['expires_default'] -%>
    ExpiresDefault <%= directory['expires_default'] %>
    <%- end -%>
    <%- if directory['expires_by_type'] -%>
    <%- Array(directory['expires_by_type']).each do |rule| -%>
    ExpiresByType <%= rule %>
    <%- end -%>
    <%- end -%>
    <%- if directory['ext_filter_options'] -%>
    ExtFilterOptions <%= directory['ext_filter_options'] %>
    <%- end -%>
    <%- if directory['force_type'] -%>
    ForceType <%= directory['force_type'] %>
    <%- end -%>
    <%- if directory['ssl_options'] -%>
    SSLOptions <%= Array(directory['ssl_options']).join(' ') %>
    <%- end -%>
    <%- if directory['suphp'] and @suphp_engine == 'on' -%>
    suPHP_UserGroup <%= directory['suphp']['user'] %> <%= directory['suphp']['group'] %>
    <%- end -%>
    <%- if directory['fcgiwrapper'] -%>
    FcgidWrapper <%= directory['fcgiwrapper']['command'] %> <%= directory['fcgiwrapper']['suffix'] %> <%= directory['fcgiwrapper']['virtual'] %>
    <%- end -%>
    <%- if directory['rewrites'] -%>
    # Rewrite rules
    RewriteEngine On
      <%- directory['rewrites'].flatten.compact.each do |rewrite_details| -%>
        <%- if rewrite_details['comment'] -%>
    #<%= rewrite_details['comment'] %>
        <%- end -%>
        <%- if rewrite_details['rewrite_base'] -%>
    RewriteBase <%= rewrite_details['rewrite_base'] %>
        <%- end -%>
        <%- if rewrite_details['rewrite_cond'] -%>
          <%- Array(rewrite_details['rewrite_cond']).each do |commands| -%>
            <%- Array(commands).each do |command| -%>
    RewriteCond <%= command %>
            <%- end -%>
          <%- end -%>
        <%- end -%>
        <%- Array(rewrite_details['rewrite_rule']).each do |commands| -%>
          <%- Array(commands).each do |command| -%>
    RewriteRule <%= command %>
          <%- end -%>
        <%- end -%>
      <%- end -%>
    <%- end -%>
    <%- if directory['setenv'] -%>
      <%- Array(directory['setenv']).each do |setenv| -%>
    SetEnv <%= setenv %>
      <%- end -%>
    <%- end -%>
    <%- if directory['set_output_filter'] -%>
    SetOutputFilter <%= directory['set_output_filter'] %>
    <%- end -%>
    <%- if @shibboleth_enabled -%>
      <%- if directory['shib_require_session'] and ! directory['shib_require_session'].empty? -%>
    ShibRequireSession <%= directory['shib_require_session'] %>
      <%- end -%>
      <%- if directory['shib_request_settings'] and ! directory['shib_request_settings'].empty? -%>
        <%- directory['shib_request_settings'].each do |key,value| -%>
    ShibRequestSetting <%= key %> <%= value %>
        <%- end -%>
      <%- end -%>
      <%- if directory['shib_use_headers'] and ! directory['shib_use_headers'].empty? -%>
    ShibUseHeaders <%= directory['shib_use_headers'] %>
      <%- end -%>
    <%- end -%>
    <%- if directory['mellon_enable'] -%>
    MellonEnable "<%= directory['mellon_enable'] %>"
      <%- if directory['mellon_endpoint_path'] -%>
    MellonEndpointPath "<%= directory['mellon_endpoint_path'] %>"
      <%- end -%>
      <%- if directory['mellon_sp_private_key_file'] -%>
    MellonSPPrivateKeyFile "<%= directory['mellon_sp_private_key_file'] %>"
      <%- end -%>
      <%- if directory['mellon_sp_cert_file'] -%>
    MellonSPCertFile "<%= directory['mellon_sp_cert_file'] %>"
      <%- end -%>
      <%- if directory['mellon_sp_metadata_file'] -%>
    MellonSPMetadataFile "<%= directory['mellon_sp_metadata_file'] %>"
      <%- end -%>
      <%- if directory['mellon_idp_metadata_file'] -%>
    MellonIDPMetadataFile "<%= directory['mellon_idp_metadata_file'] %>"
      <%- end -%>
      <%- if directory['mellon_set_env_no_prefix'] -%>
        <%- directory['mellon_set_env_no_prefix'].each do |key, value| -%>
    MellonSetEnvNoPrefix "<%= key %>" "<%= value %>"
        <%- end -%>
      <%- end -%>
      <%- if directory['mellon_user'] -%>
    MellonUser "<%= directory['mellon_user'] %>"
      <%- end -%>
      <%- if directory['mellon_saml_response_dump'] -%>
    MellonSamlResponseDump "<%= directory['mellon_saml_response_dump'] %>"
      <%- end -%>
      <%- if directory['mellon_cond'] -%>
        <%- Array(directory['mellon_cond']).each do |cond| -%>
    MellonCond <%= cond %>
         <%- end -%>
      <%- end -%>
    <%- end -%>
    <%- if directory['custom_fragment'] -%>
    <%= directory['custom_fragment'] %>
    <%- end -%>
  </<%= provider %>>
    <%- end -%>
  <%- end -%>
<% end -%>

  ## Vhost docroot
<% if @virtual_docroot -%>
  VirtualDocumentRoot "<%= @virtual_docroot %>"
<% elsif @docroot -%>
  DocumentRoot "<%= @docroot %>"
<% end -%>
<% if @error_documents and ! @error_documents.empty? -%>
  <%- [@error_documents].flatten.compact.each do |error_document| -%>
    <%- if error_document["error_code"] != '' and error_document["document"] != '' -%>
  ErrorDocument <%= error_document["error_code"] %> <%= error_document["document"] %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @fallbackresource -%>

  FallbackResource <%= @fallbackresource %>
<% end -%>
<% if @fastcgi_server -%>

  FastCgiExternalServer <%= @fastcgi_server %> -socket <%= @fastcgi_socket -%>
<%   unless @fastcgi_idle_timeout.nil? %> -idle-timeout <%= @fastcgi_idle_timeout %><% end %>
<% end -%>
<% if @fastcgi_dir -%>

  <Directory "<%= @fastcgi_dir %>">
    Options +ExecCGI
    AllowOverride All
    SetHandler fastcgi-script
  <%- if scope.function_versioncmp([@apache_version, '2.4']) >= 0 -%>
    Require all granted
  <%- else -%>
    Order allow,deny
    Allow From All
  <%- end -%>
    AuthBasicAuthoritative Off
  </Directory>

  AllowEncodedSlashes On
  ServerSignature Off
<% end -%>
</VirtualHost>
# ************************************
# Vhost template in module puppetlabs-apache
# Managed by Puppet
# ************************************

<VirtualHost <%= [@nvh_addr_port].flatten.compact.join(' ') %>>
<% if @servername -%>
  ServerName <%= @servername %>
<% end -%>
<% if @serveradmin -%>
  ServerAdmin <%= @serveradmin %>
<% end -%>
<% if @filters and ! @filters.empty? -%>

  ## Filter module rules
  ## as per http://httpd.apache.org/docs/2.2/mod/mod_filter.html
  <%- Array(@filters).each do |filter| -%>
    <%- if filter != '' -%>
  <%= filter %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @headers and ! @headers.empty? -%>

  ## Header rules
  ## as per http://httpd.apache.org/docs/2.2/mod/mod_headers.html#header
  <%- Array(@headers).each do |header_statement| -%>
    <%- if header_statement != '' -%>
  Header <%= header_statement %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @itk and ! @itk.empty? -%>

  ## ITK statement
  <IfModule mpm_itk_module>
     <%- if @itk["user"] and @itk["group"] -%>
     AssignUserId <%= @itk["user"] %> <%= @itk["group"] %>
     <%- end -%>
     <%- if @itk["assignuseridexpr"] -%>
     AssignUserIdExpr <%= @itk["assignuseridexpr"] %>
     <%- end -%>
     <%- if @itk["assigngroupidexpr"] -%>
     AssignGroupIdExpr <%= @itk["assigngroupidexpr"] %>
     <%- end -%>
     <%- if @itk["maxclientvhost"] -%>
     MaxClientsVHost <%= @itk["maxclientvhost"] %>
     <%- end -%>
     <%- if @itk["nice"] -%>
     NiceValue <%= @itk["nice"] %>
     <%- end -%>
     <%- if @kernelversion >= '3.5.0' -%>
       <%- if @itk["limituidrange"] -%>
     LimitUIDRange <%= @itk["limituidrange"] %>
       <%- end -%>
       <%- if @itk["limitgidrange"] -%>
     LimitGIDRange <%= @itk["limitgidrange"] %>
       <%- end -%>
     <%- end -%>
  </IfModule>
<% end -%>
<% if @jk_mounts and not @jk_mounts.empty? -%>

  <%- @jk_mounts.each do |jk| -%>
    <%- if jk.is_a?(Hash) -%>
      <%- if jk.has_key?('mount') and jk.has_key?('worker') -%>
  JkMount   <%= jk['mount'] %> <%= jk['worker'] %>
      <%- elsif jk.has_key?('unmount') and jk.has_key?('worker') -%>
  JkUnMount <%= jk['unmount'] %> <%= jk['worker'] %>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @error_log or @log_level -%>

  ## Logging
<% end -%>
<% if @error_log -%>
  ErrorLog "<%= @error_log_destination %>"
<% end -%>
<% if @log_level -%>
  LogLevel <%= @log_level %>
<% end -%>
<% if @passenger_app_root -%>
  PassengerAppRoot <%= @passenger_app_root %>
<% end -%>
<% if @passenger_app_env -%>
  PassengerAppEnv <%= @passenger_app_env %>
<% end -%>
<% if @passenger_ruby -%>
  PassengerRuby <%= @passenger_ruby %>
<% end -%>
<% if @passenger_min_instances -%>
  PassengerMinInstances <%= @passenger_min_instances %>
<% end -%>
<% if @passenger_start_timeout -%>
  PassengerStartTimeout <%= @passenger_start_timeout %>
<% end -%>
<% if @passenger_pre_start -%>
  PassengerPreStart <%= @passenger_pre_start %>
<% end -%>
<% if @passenger_user -%>
  PassengerUser <%= @passenger_user %>
<% end -%>
<% if @passenger_high_performance -%>
  PassengerHighPerformance <%= scope.function_bool2httpd([@passenger_high_performance]) %>
<% end -%>
<% if @passenger_base_uris -%>

  ## Enable passenger base uris
<% Array(@passenger_base_uris).each do |uri| -%>
  PassengerBaseURI <%= uri %>
<% end -%>
<% end -%>
<% if @php_values and not @php_values.empty? -%>
  <%- @php_values.sort.each do |key,value| -%>
    <%- if value.is_a? String -%>
  php_value <%= key %> "<%= value %>"
    <%- else -%>
  php_value <%= key %> <%= value %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @php_flags and not @php_flags.empty? -%>
  <%- @php_flags.sort.each do |key,flag| -%>
    <%-# normalize flag -%>
    <%- if flag =~ /true|yes|on|1/i then flag = 'on' else flag = 'off' end -%>
  php_flag <%= key %> <%= flag %>
  <%- end -%>
<% end -%>
<% if @php_admin_values and not @php_admin_values.empty? -%>
  <%- @php_admin_values.sort.each do |key,value| -%>
  php_admin_value <%= key %> <%= value %>
  <%- end -%>
<% end -%>
<% if @php_admin_flags and not @php_admin_flags.empty? -%>
  <%- @php_admin_flags.sort.each do |key,flag| -%>
    <%-# normalize flag -%>
    <%- if flag =~ /true|yes|on|1/i then flag = 'on' else flag = 'off' end -%>
  php_admin_flag <%= key %> <%= flag %>
  <%- end -%>
<% end -%>
<% if @proxy_dest or @proxy_pass or @proxy_pass_match or @proxy_dest_match -%>

  ## Proxy rules
  ProxyRequests Off
<%- end -%>
<% if @proxy_preserve_host -%>
  ProxyPreserveHost On
<% else -%>
  ProxyPreserveHost Off
<%- end -%>
<%- if defined?(@proxy_add_headers) -%>
  <%- if @proxy_add_headers -%>
  ProxyAddHeaders On
  <%- else -%>
  ProxyAddHeaders Off
  <%- end -%>
<%- end -%>
<% if @proxy_error_override -%>
  ProxyErrorOverride On
<%- end -%>
<%- [@proxy_pass].flatten.compact.each do |proxy| -%>
  ProxyPass <%= proxy['path'] %> <%= proxy['url'] -%>
  <%- if proxy['params'] -%>
    <%- proxy['params'].keys.sort.each do |key| -%> <%= key %>=<%= proxy['params'][key] -%>
    <%- end -%>
  <%- end -%>
  <%- if proxy['keywords'] %> <%= proxy['keywords'].join(' ') -%>
  <%- end %>
  <%- if not proxy['reverse_cookies'].nil? -%>
    <%- Array(proxy['reverse_cookies']).each do |reverse_cookies| -%>
      <%- if reverse_cookies['path'] -%>
  ProxyPassReverseCookiePath <%= reverse_cookies['path'] %> <%= reverse_cookies['url'] %>
      <%- end -%>
      <%- if reverse_cookies['domain'] -%>
  ProxyPassReverseCookieDomain <%= reverse_cookies['domain'] %> <%= reverse_cookies['url'] %>
      <%- end -%>
    <%- end -%>
  <%- end -%>
  <%- if proxy['reverse_urls'].nil? -%>
  ProxyPassReverse <%= proxy['path'] %> <%= proxy['url'] %>
  <%- else -%>
    <%- Array(proxy['reverse_urls']).each do |reverse_url| -%>
  ProxyPassReverse <%= proxy['path'] %> <%= reverse_url %>
    <%- end -%>
  <%- end -%>
  <%- if proxy['setenv'] -%>
    <%- Array(proxy['setenv']).each do |setenv_var| -%>
  SetEnv <%= setenv_var %>
    <%- end -%>
  <%- end -%>
  <%- if proxy['options'] -%>
    <%- proxy['options'].keys.sort.each do |key| -%>
    <%= key %> <%= proxy['options'][key] %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% [@proxy_pass_match].flatten.compact.each do |proxy| %>
  ProxyPassMatch <%= proxy['path'] %> <%= proxy['url'] -%>
  <%- if proxy['params'] -%>
    <%- proxy['params'].keys.sort.each do |key| -%> <%= key %>=<%= proxy['params'][key] -%>
    <%- end -%>
  <%- end -%>
  <%- if proxy['keywords'] %> <%= proxy['keywords'].join(' ') -%>
  <%- end %>
  <%- if proxy['reverse_urls'].nil? -%>
  ProxyPassReverse <%= proxy['path'] %> <%= proxy['url'] %>
  <%- else -%>
    <%- Array(proxy['reverse_urls']).each do |reverse_url| -%>
  ProxyPassReverse <%= proxy['path'] %> <%= reverse_url %>
    <%- end -%>
  <%- end -%>
  <%- if proxy['setenv'] -%>
    <%- Array(proxy['setenv']).each do |setenv_var| -%>
  SetEnv <%= setenv_var %>
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @proxy_dest -%>
<%- Array(@no_proxy_uris).each do |uri| -%>
  ProxyPass        <%= uri %> !
<% end -%>
  ProxyPass        / <%= @proxy_dest %>/
  ProxyPassReverse / <%= @proxy_dest %>/
<% end -%>
<% if @proxy_dest_match -%>
<%- Array(@no_proxy_uris_match).each do |uri| -%>
  ProxyPassMatch   <%= uri %> !
<% end -%>
  ProxyPassMatch   / <%= @proxy_dest_match %>/
  ProxyPassReverse / <%= @proxy_dest_reverse_match %>/
<% end -%>
<% if @rack_base_uris -%>

  ## Enable rack
<% Array(@rack_base_uris).each do |uri| -%>
  RackBaseURI <%= uri %>
<% end -%>
<% end -%>
<% if @redirect_source and @redirect_dest -%>
<% @redirect_dest_a   = Array(@redirect_dest) -%>
<% @redirect_source_a = Array(@redirect_source) -%>
<% @redirect_status_a = Array(@redirect_status) -%>

  ## Redirect rules
  <%- @redirect_source_a.each_with_index do |source, i| -%>
<% @redirect_dest_a[i] ||= @redirect_dest_a[0] -%>
<% @redirect_status_a[i] ||= @redirect_status_a[0] -%>
  Redirect <%= "#{@redirect_status_a[i]} " %><%= source %> <%= @redirect_dest_a[i] %>
  <%- end -%>
<% end -%>
<%- if @redirectmatch_status and @redirectmatch_regexp and @redirectmatch_dest -%>
<% @redirectmatch_status_a = Array(@redirectmatch_status) -%>
<% @redirectmatch_regexp_a = Array(@redirectmatch_regexp) -%>
<% @redirectmatch_dest_a = Array(@redirectmatch_dest) -%>

  ## RedirectMatch rules
  <%- @redirectmatch_status_a.each_with_index do |status, i| -%>
<% @redirectmatch_status_a[i] ||= @redirectmatch_status_a[0] -%>
<% @redirectmatch_regexp_a[i] ||= @redirectmatch_regexp_a[0] -%>
<% @redirectmatch_dest_a[i] ||= @redirectmatch_dest_a[0] -%>
  RedirectMatch <%= "#{@redirectmatch_status_a[i]} " %> <%= @redirectmatch_regexp_a[i] %> <%= @redirectmatch_dest_a[i] %>
  <%- end -%>
<%- elsif @redirectmatch_regexp and @redirectmatch_dest -%>
<% @redirectmatch_regexp_a = Array(@redirectmatch_regexp) -%>
<% @redirectmatch_dest_a = Array(@redirectmatch_dest) -%>

  ## RedirectMatch rules
  <%- @redirectmatch_regexp_a.each_with_index do |status, i| -%>
<% @redirectmatch_regexp_a[i] ||= @redirectmatch_regexp_a[0] -%>
<% @redirectmatch_dest_a[i] ||= @redirectmatch_dest_a[0] -%>
  RedirectMatch <%= @redirectmatch_regexp_a[i] %> <%= @redirectmatch_dest_a[i] %>
  <%- end -%>
<% end -%>
<% if @request_headers and ! @request_headers.empty? -%>

  ## Request header rules
  ## as per http://httpd.apache.org/docs/2.2/mod/mod_headers.html#requestheader
  <%- Array(@request_headers).each do |request_statement| -%>
    <%- if request_statement != '' -%>
  RequestHeader <%= request_statement %>
    <%- end -%>
  <%- end -%>
<% end -%>
<%- _item = scope.lookupvar('_template_scope')[:item] -%>
<%- if scope.function_versioncmp([@apache_version, '2.4']) >= 0 -%>
  <%- if _item['require'] && _item['require'] != '' && _item['require'] !~ /unmanaged/i -%>
    <%- if _item['require'].is_a?(Hash) -%>
      <%- case _item['require']['enforce'].downcase -%>
      <%- when 'all','none','any' then -%>
    <Require<%= _item['require']['enforce'].capitalize %>>
        <%- Array(_item['require']['requires']).each do |req| -%>
      Require <%= req.strip %>
        <%- end -%>
    </Require<%= _item['require']['enforce'].capitalize %>>
      <%- else -%>
        <%- scope.function_warning(["Apache::Vhost: Require can only overwritten with all, none or any."]) -%>
      <%- end -%>
    <%- else -%>
      <%- Array(_item['require']).each do |req| -%>
    Require <%= req %>
      <%- end -%>
    <%- end -%>
  <%- end -%>
  <%- if _item['auth_require'] -%>
    Require <%= _item['auth_require'] %>
  <%- end -%>
  <%- if !(_item['require'] && _item['require'] != '') && _item['require'] !~ /unmanaged/i && !(_item['auth_require']) -%>
    Require all granted
  <%- end -%>
<%- else -%>
  <%- if _item['auth_require'] -%>
    Require <%= _item['auth_require'] %>
  <%- end -%>
  <%- if _item['order'] and _item['order'] != '' -%>
    Order <%= Array(_item['order']).join(',') %>
  <%- else -%>
    Order allow,deny
  <%- end -%>
  <%- if _item['deny'] and ! [ false, 'false', '' ].include?(_item['deny']) -%>
    <%- if _item['deny'].kind_of?(Array) -%>
      <%- Array(_item['deny']).each do |restrict| -%>
    Deny <%=  restrict %>
      <%- end -%>
    <%- else -%>
    Deny <%= _item['deny'] %>
    <%- end -%>
  <%- end -%>
  <%- if _item['allow'] and ! [ false, 'false', '' ].include?(_item['allow']) -%>
    <%- if _item['allow'].kind_of?(Array) -%>
      <%- Array(_item['allow']).each do |access| -%>
    Allow <%=  access %>
    <%- end -%>
  <%- else -%>
    Allow <%= _item['allow'] %>
  <%- end -%>
  <%- elsif [ 'from all', 'from All' ].include?(_item['deny']) -%>
  <%- elsif ! _item['deny'] and [ false, 'false', '' ].include?(_item['allow']) -%>
    Deny from all
  <%- else -%>
    Allow from all
  <%- end -%>
  <%- if _item['satisfy'] and _item['satisfy'] != '' -%>
    Satisfy <%= _item['satisfy'] %>
  <%- end -%>
<%- end -%>
<%- if @rewrites -%>
  ## Rewrite rules
  RewriteEngine On
  <%- if @rewrite_base -%>
  RewriteBase <%= @rewrite_base %>
  <%- end -%>

  <%- [@rewrites].flatten.compact.each do |rewrite_details| -%>
    <%- if rewrite_details['comment'] -%>
  #<%= rewrite_details['comment'] %>
    <%- end -%>
    <%- if rewrite_details['rewrite_base'] -%>
  RewriteBase <%= rewrite_details['rewrite_base'] %>
    <%- end -%>
    <%- if rewrite_details['rewrite_cond'] -%>
      <%- Array(rewrite_details['rewrite_cond']).each do |commands| -%>
        <%- Array(commands).each do |command| -%>
  RewriteCond <%= command %>
        <%- end -%>
      <%- end -%>
    <%- end -%>
    <%- if rewrite_details['rewrite_map'] -%>
      <%- Array(rewrite_details['rewrite_map']).each do |commands| -%>
        <%- Array(commands).each do |command| -%>
  RewriteMap <%= command %>
        <%- end -%>
      <%- end -%>
    <%- end -%>
    <%- Array(rewrite_details['rewrite_rule']).each do |commands| -%>
      <%- Array(commands).each do |command| -%>
  RewriteRule <%= command %>
      <%- end -%>

    <%- end -%>
  <%- end -%>
<%- end -%>
<%# reverse compatibility -%>
<% if @rewrite_rule and !@rewrites -%>
  ## Rewrite rules
  RewriteEngine On
  <%- if @rewrite_base -%>
  RewriteBase <%= @rewrite_base %>
  <%- end -%>
  <%- if @rewrite_cond -%>
    <%- Array(@rewrite_cond).each do |cond| -%>
  RewriteCond <%= cond %>
    <%- end -%>
  <%- end -%>
  RewriteRule <%= @rewrite_rule %>
<%- end -%>
<%- if @scriptaliases.is_a?(Array) -%>
<%-  aliases = @scriptaliases -%>
<%- elsif @scriptaliases.is_a?(Hash) -%>
<%-  aliases = [@scriptaliases] -%>
<%- else -%>
<%-  # Nothing to do with any other data type -%>
<%-  aliases = [] -%>
<%- end -%>
<%- if @scriptalias or !aliases.empty? -%>
  ## Script alias directives
<%# Combine scriptalais and scriptaliases into a single data structure -%>
<%# for backward compatibility and ease of implementation -%>
<%- aliases << { 'alias' => '/cgi-bin', 'path' => @scriptalias } if @scriptalias -%>
<%- aliases.flatten.compact! -%>
<%- aliases.each do |salias| -%>
  <%- if salias["path"] != '' -%>
    <%- if salias["alias"] and salias["alias"] != '' -%>
  ScriptAlias <%= salias['alias'] %> "<%= salias['path'] %>"
    <%- elsif salias["aliasmatch"] and salias["aliasmatch"] != '' -%>
  ScriptAliasMatch <%= salias['aliasmatch'] %> "<%= salias['path'] %>"
    <%- end -%>
  <%- end -%>
<%- end -%>
<%- end -%>
<% if @modsec_disable_vhost -%>
  SecRuleEngine Off
<% end -%>
<% if @_modsec_disable_ids.is_a?(Hash) -%>
<%   @_modsec_disable_ids.each do |location,rules| -%>
  <LocationMatch <%= location %>>
<%     Array(rules).each do |rule| -%>
    SecRuleRemoveById <%= rule %>
<%     end -%>
  </LocationMatch>
<%   end -%>
<% end -%>
<% ips = Array(@modsec_disable_ips).join(',') %>
<% if ips != '' %>
  SecRule REMOTE_ADDR "<%= ips %>" "nolog,allow,id:1234123455"
  SecAction  "phase:2,pass,nolog,id:1234123456"
<% end -%>
<% if @_modsec_disable_msgs.is_a?(Hash) -%>
<%   @_modsec_disable_msgs.each do |location,rules| -%>
  <LocationMatch <%= location %>>
<%     Array(rules).each do |rule| -%>
    SecRuleRemoveByMsg "<%= rule %>"
<%     end -%>
  </LocationMatch>
<%   end -%>
<% end -%>
<% if @_modsec_disable_tags.is_a?(Hash) -%>
<%   @_modsec_disable_tags.each do |location,rules| -%>
  <LocationMatch <%= location %>>
<%     Array(rules).each do |rule| -%>
    SecRuleRemoveByTag "<%= rule %>"
<%     end -%>
  </LocationMatch>
<%   end -%>
<% end -%>
<% if @modsec_body_limit -%>
  SecRequestBodyLimit <%= @modsec_body_limit %>
<% end -%>
<% if @serveraliases and ! @serveraliases.empty? -%>

  ## Server aliases
  <%- Array(@serveraliases).each do |serveralias| -%>
  ServerAlias <%= serveralias %>
  <%- end -%>
<% end -%>
  ServerSignature Off
<% if @setenv and ! @setenv.empty? -%>

  ## SetEnv/SetEnvIf for environment variables
  <%- Array(@setenv).each do |envvar| -%>
  SetEnv <%= envvar %>
  <%- end -%>
<% end -%>
<% if @setenvif and ! @setenvif.empty? -%>
  <%- Array(@setenvif).each do |envifvar| -%>
  SetEnvIf <%= envifvar %>
  <%- end -%>
<% end -%>
<% if @setenvifnocase and ! @setenvifnocase.empty? -%>
  <%- Array(@setenvifnocase).each do |envifncvar| -%>
  SetEnvIfNoCase <%= envifncvar %>
  <%- end -%>
<% end -%>
<% if @ssl -%>

  ## SSL directives
  SSLEngine on
  SSLCertificateFile      "<%= @ssl_cert %>"
  SSLCertificateKeyFile   "<%= @ssl_key %>"
  <%- if @ssl_chain -%>
  SSLCertificateChainFile "<%= @ssl_chain %>"
  <%- end -%>
  <%- if @ssl_certs_dir && @ssl_certs_dir != '' -%>
  SSLCACertificatePath    "<%= @ssl_certs_dir %>"
  <%- end -%>
  <%- if @ssl_ca -%>
  SSLCACertificateFile    "<%= @ssl_ca %>"
  <%- end -%>
  <%- if @ssl_crl_path -%>
  SSLCARevocationPath     "<%= @ssl_crl_path %>"
  <%- end -%>
  <%- if @ssl_crl -%>
  SSLCARevocationFile     "<%= @ssl_crl %>"
  <%- end -%>
  <%- if @ssl_crl_check && scope.function_versioncmp([@apache_version, '2.4']) >= 0 -%>
  SSLCARevocationCheck    "<%= @ssl_crl_check %>"
  <%- end -%>
  <%- if @ssl_protocol -%>
  SSLProtocol             <%= [@ssl_protocol].flatten.compact.join(' ') %>
  <%- end -%>
  <%- if @ssl_cipher -%>
  SSLCipherSuite          <%= @ssl_cipher %>
  <%- end -%>
  <%- if @ssl_honorcipherorder -%>
  SSLHonorCipherOrder     <%= @ssl_honorcipherorder %>
  <%- end -%>
  <%- if @ssl_verify_client -%>
  SSLVerifyClient         <%= @ssl_verify_client %>
  <%- end -%>
  <%- if @ssl_verify_depth -%>
  SSLVerifyDepth          <%= @ssl_verify_depth %>
  <%- end -%>
  <%- if @ssl_options -%>
  SSLOptions <%= Array(@ssl_options).join(' ') %>
  <%- end -%>
  <%- if @ssl_openssl_conf_cmd -%>
  SSLOpenSSLConfCmd       <%= @ssl_openssl_conf_cmd %>
  <%- end -%>
<% end -%>
<% if @ssl_proxyengine -%>

  # SSL Proxy directives
  SSLProxyEngine On
  <%- if @ssl_proxy_verify -%>
  SSLProxyVerify <%= @ssl_proxy_verify %>
  <%- end -%>
  <%- if @ssl_proxy_check_peer_cn -%>
  SSLProxyCheckPeerCN     <%= @ssl_proxy_check_peer_cn %>
  <%- end -%>
  <%- if @ssl_proxy_check_peer_name -%>
  SSLProxyCheckPeerName   <%= @ssl_proxy_check_peer_name %>
  <%- end -%>
  <%- if @ssl_proxy_check_peer_expire -%>
  SSLProxyCheckPeerExpire   <%= @ssl_proxy_check_peer_expire %>
  <%- end -%>
  <%- if @ssl_proxy_machine_cert -%>
  SSLProxyMachineCertificateFile "<%= @ssl_proxy_machine_cert %>"
  <%- end -%>
  <%- if @ssl_proxy_protocol -%>
  SSLProxyProtocol  <%= [@ssl_proxy_protocol].flatten.compact.join(' ') %>
  <%- end -%>
<% end -%>
<% if @suexec_user_group -%>

  SuexecUserGroup <%= @suexec_user_group %>
<% end -%>
<% if @suphp_engine == 'on' -%>
  <%- if @suphp_addhandler -%>
  suPHP_AddHandler <%= @suphp_addhandler %>
  <%- end -%>
  <%- if @suphp_engine -%>
  suPHP_Engine <%= @suphp_engine %>
  <%- end -%>
  <%- if @suphp_configpath -%>
  suPHP_ConfigPath "<%= @suphp_configpath %>"
  <%- end -%>
<% end -%>
<% if @wsgi_application_group -%>
  WSGIApplicationGroup <%= @wsgi_application_group %>
<% end -%>
<% if @wsgi_daemon_process and @wsgi_daemon_process_options -%>
  WSGIDaemonProcess <%= @wsgi_daemon_process %> <%= @wsgi_daemon_process_options.collect { |k,v| "#{k}=#{v}"}.sort.join(' ') %>
<% elsif @wsgi_daemon_process and !@wsgi_daemon_process_options -%>
  WSGIDaemonProcess <%= @wsgi_daemon_process %>
<% end -%>
<% if @wsgi_import_script and @wsgi_import_script_options -%>
  WSGIImportScript <%= @wsgi_import_script %> <%= @wsgi_import_script_options.collect { |k,v| "#{k}=#{v}"}.sort.join(' ') %>
<% end -%>
<% if @wsgi_process_group -%>
  WSGIProcessGroup <%= @wsgi_process_group %>
<% end -%>
<% if @wsgi_script_aliases and ! @wsgi_script_aliases.empty? -%>
  <%- @wsgi_script_aliases.keys.sort.each do |key| -%>
    <%- if key != '' and @wsgi_script_aliases[key] != ''-%>
  WSGIScriptAlias <%= key %> "<%= @wsgi_script_aliases[key] %>"
    <%- end -%>
  <%- end -%>
<% end -%>
<% if @wsgi_pass_authorization -%>
  WSGIPassAuthorization <%= @wsgi_pass_authorization %>
<% end -%>
<% if @wsgi_chunked_request -%>
  WSGIChunkedRequest <%= @wsgi_chunked_request %>
<% end -%>
